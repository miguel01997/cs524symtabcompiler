// File generated by Invisible Jacc version 1.1.
// Invisible Jacc is Copyright 1997-1998 Invisible Software, Inc.

package invisible.jacc.ex4;

import invisible.jacc.parse.ScannerTable;
import invisible.jacc.util.ArrayRLE;

public class Ex4GrammarScannerTable extends ScannerTable
{

    // The number of different character categories.

    private static final int gen_categoryCount = 70;

    // The character set size.

    private static final int gen_charSetSize = 65536;

    // The character category table.

    private static byte[] gen_categoryTable = null;
    private static short[] rle_categoryTable = 
    {-32767, 0, 2048, 67, 66, 0, 67, 69, 2816, 68, 1024, 67, 27, 28, 0, 54, 29, 30, 31, 32,
    33, 34, 35, 36, 37, 38, 39, 55, 571, 828, 314, 40, 41, 42, 43, 44, 45, 0, 569, 61,
    62, 63, 1078, 64, 2614, 65, 310, 46, 47, 48, 49, 54, 0, 1, 2, 3, 4, 5, 6, 7,
    8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 50,
    51, 52, 53, 10752, 54, 2304, 54, 768, 54, 1024, 5686, 0, 7734, 0, -714, 768, 7478, 14080, 22582, 1536,
    2102, 256, 1590, 3328, 310, 3328, 1078, -27648, 54, 2560, 54, 0, 566, 0, 54, 0, 4918, 0, 11062, 0,
    1590, 512, 54, 0, 54, 0, 54, 0, 54, 0, 4406, 3072, 2870, 0, 16694, 0, 2870, 0, 9014, 3328,
    13366, 256, 310, 256, 310, 512, 6966, 256, 1846, 256, 310, 13824, 9526, 256, 54, 1536, 9782, 18176, 6710, 1024,
    566, 11520, 6454, 1024, 2614, 5120, 2360, 1536, 17974, 256, 1078, 0, 3638, 0, 822, 0, 54, 3584, 310, 2048,
    2360, -256, -256, 2560, 13366, 512, 54, 6400, 2358, 768, 2360, 5120, 1846, 256, 310, 256, 5430, 0, 1590, 0,
    54, 512, 822, 8448, 310, 0, 566, 768, 2360, 310, 4608, 1334, 768, 310, 256, 5430, 0, 1590, 0, 310,
    0, 310, 0, 310, 7680, 822, 0, 54, 1536, 2360, 256, 566, 3840, 1590, 0, 54, 0, 566, 0, 5430,
    0, 1590, 0, 310, 0, 1078, 512, 54, 8448, 54, 1024, 2360, 5120, 1846, 256, 310, 256, 5430, 0, 1590,
    0, 310, 256, 822, 512, 54, 7424, 310, 0, 566, 768, 2360, 5120, 1334, 512, 566, 0, 822, 512, 310,
    0, 54, 0, 310, 512, 310, 512, 566, 512, 1846, 0, 566, 11264, 2104, 5120, 1846, 0, 566, 0, 5686,
    0, 2358, 0, 1078, 9472, 310, 768, 2360, 5120, 1846, 0, 566, 0, 5686, 0, 2358, 0, 1078, 8960, 54,
    0, 310, 768, 2360, 5120, 1846, 0, 566, 0, 5686, 0, 3894, 9472, 310, 768, 2360, -28672, 11574, 0, 54,
    0, 310, 2816, 1590, 2048, 2360, 9728, 310, 0, 54, 256, 310, 0, 54, 256, 54, 1280, 822, 0, 1590,
    0, 566, 0, 54, 0, 54, 256, 310, 0, 310, 0, 54, 0, 310, 2048, 54, 256, 1078, 0, 54,
    2048, 2360, 256, 310, 16640, 2360, 5376, 1846, 0, 8246, -256, 13568, 9526, 2304, 9782, 2048, 22838, 1024, 17206, 1024,
    20790, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, 1280, -25802, 768, 22838, 1280, 5430, 256,
    1334, 256, 9526, 256, 1334, 256, 1846, 0, 54, 0, 54, 0, 54, 0, 7734, 256, 13366, 0, 1590, 0,
    54, 512, 566, 0, 1590, 512, 822, 256, 1334, 768, 3126, 1024, 566, 0, 1590, -32512, 54, -32512, 54, 768,
    54, 256, 2358, 0, 54, 256, 1334, 1280, 54, 0, 54, 0, 54, 0, 1846, 0, 1334, -256, -256, -256,
    -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -13568, 54, 10752, 1078, 2560, 21302, 1280, 822, 256,
    22838, 0, 566, 1280, 10038, 768, 23862, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256,
    -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, 28672, -202, -202, -202, -202,
    -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202,
    -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202,
    -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202,
    -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -23242, -256, -256,
    -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, 22784, -202, -202, -202, -202, -202, -202, -202, -202, -202,
    -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202,
    -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -202, -23754, -256, -256, -256, -256, -256,
    -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256, -256,
    -256, -256, -256, -256, -256, -256, -256, -256, 23296, -202, 11574, -12032, 1590, 2816, 1078, 1536, 2358, 0, 3126, 0,
    1078, 0, 54, 0, 310, 0, 310, 0, 27446, 8192, -202, 27190, 4352, 16182, 256, 13622, 9984, 2870, 29440, 566,
    0, 54, 0, -31178, 4608, 2360, 1536, 6454, 1280, 6454, 2560, 22582, 512, 1334, 256, 1334, 256, 1334, 256, 566,
    8704};

    // The number of tokens.

    private static final int gen_tokenCount = 24;

    // The token parameters.

    private static final int[] gen_tokenParam = 
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0};

    // The number of tokens that have a right context.

    private static final int gen_contextCount = 1;

    // Context number table.

    private static final int[] gen_contextNumber = 
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
    1, 1, 1, 1};

    // The number of start conditions for the forward DFA.

    private static final int gen_conditionCount = 2;

    // The number of states in the forward DFA.

    private static final int gen_fwdStateCount = 229;

    // The number of recognition codes in the forward DFA.

    private static final int gen_fwdRecognitionCount = 36;

    // Forward DFA initial state table.

    private static final int[] gen_fwdInitialState = 
    {1, 2};

    // Forward DFA transition table.

    private static short[][] gen_fwdTransitionTable = null;
    private static short[] rle_fwdTransitionTable = 
    {229, 70, -32443, 229, 70, 34, 14, 15, 19, 25, 22, 26, 27, 20, 24, -32511, 20, 21, 20, 23,
    20, 28, 20, 18, 16, 17, 20, 29, 30, -32510, 20, 5, 35, 5, 9, 33, -32511, 3, 5, 11,
    3, 12, 4, 13, 8, 3, 7, 5, 6, 8, 3, 34, 3, 5, 3, 10, 3, 8, 20, 31,
    36, 20, -32510, 32, -32508, 20, 39, 37, 38, 40, 70, -32479, 41, 42, -32482, 41, 39, -32511, 41, 40,
    70, -32443, 229, 70, -32458, 229, 43, -32511, 229, -32510, 43, -32504, 229, 70, -32470, 229, 44, -32487, 229, 70,
    -32470, 229, 44, 45, -32488, 229, 70, -32471, 229, 46, 44, -32487, 229, 70, -32443, 229, 70, -32483, 229, 44,
    -32501, 229, 44, -32487, 229, 70, -32470, 229, 44, -32506, 229, 44, -32495, 229, 70, -32478, 229, 44, -32506, 229,
    44, -32487, 229, 70, -32476, 229, 44, -32508, 229, 44, -32487, 229, 70, -32479, 229, 47, -32509, 229, 48, -32510,
    229, 44, -32487, 229, 70, 229, 49, 50, -32489, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49,
    52, -32511, 49, 51, -32507, 49, 53, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32506, 49, 56, -32502,
    49, 54, 57, 49, 58, 49, 55, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32506, 49, 60, -32504,
    49, 59, -32505, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49, 61, -32492, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, 62, -32507, 49, 65, -32510, 49, 64, -32511, 49, 63, -32502, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, -32487, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49, 66, -32502, 49,
    -32486, 229, -32501, 49, -32509, 229, 70, 229, -32502, 49, 67, -32502, 49, 68, -32511, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, 69, -32510, 49, 70, -32498, 49, 71, -32508, 49, -32486, 229, -32501, 49, -32509, 229, 70,
    229, -32508, 49, 73, -32507, 49, 74, 72, -32501, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49,
    76, -32504, 49, 75, -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 77, -32506, 49, 80, -32511, 49,
    79, -32511, 49, 78, -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49, 81, -32502, 49, -32486,
    229, -32501, 49, -32509, 229, 70, 229, 82, -32497, 49, 83, -32511, 49, 84, -32508, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, -32499, 49, 85, -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32506, 49, 86,
    -32495, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32510, 87, 90, 89, 90, -32508, 87, 88, -32502, 87,
    91, -32511, 87, -32502, 229, 43, -32498, 229, 87, 92, -32511, 87, 93, -32511, 92, 90, 89, 90, 88, 91,
    -32509, 229, 70, 229, -32510, 87, 90, 89, 90, -32508, 87, 88, -32499, 87, -32502, 229, 43, -32498, 229, 87,
    94, -32511, 87, -32510, 94, 90, 89, 90, 88, 87, -32509, 229, 70, -32482, 95, 96, -32498, 95, 97, -32495,
    95, 229, -32511, 95, 229, 70, -32443, 229, 70, -32485, 98, 99, -32495, 98, 100, -32495, 98, 229, -32511, 98,
    229, 70, 229, -32487, 87, -32486, 229, -32501, 87, -32509, 229, 70, -32474, 229, 101, -32486, 229, 102, -32511, 229,
    70, -32443, 103, 70, -32443, 229, 70, -32447, 229, 104, -32510, 229, 70, -32479, 105, 106, -32482, 105, 229, -32511,
    105, 229, 70, -32479, 105, 106, -32509, 105, 107, -32487, 105, 229, -32511, 105, 229, 70, -32509, 229, 109, 108,
    109, -32465, 229, 43, -32511, 229, -32510, 43, 109, 108, 109, -32507, 229, 70, -32443, 229, 70, -32470, 229, 44,
    46, -32488, 229, 70, -32470, 229, 44, -32487, 229, 70, -32479, 47, 110, -32482, 47, 229, -32511, 47, 229, 70,
    -32447, 48, 229, -32511, 48, 229, 70, 229, -32487, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32495, 49,
    111, -32506, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49, 112, -32492, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, -32499, 49, 113, -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32494, 49, 114,
    -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 115, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70,
    229, -32500, 49, 116, -32501, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49, 117, -32502, 49, -32486,
    229, -32501, 49, -32509, 229, 70, 229, -32498, 49, 118, -32503, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229,
    -32505, 49, 119, -32496, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 120, -32494, 49, 121, -32510, 49, 73,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 123, -32505, 49, 122, -32505, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, -32494, 49, 124, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32495, 49,
    114, 125, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 126, -32501, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, 127, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 78, -32488, 49, -32486,
    229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 128, -32501, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229,
    -32495, 49, 114, -32506, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32494, 49, 129, -32507, 49, -32486, 229,
    -32501, 49, -32509, 229, 70, 229, -32494, 49, 130, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32491,
    49, 73, -32510, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32502, 49, 131, -32499, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, -32495, 49, 132, 133, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32487,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32498, 49, 134, -32503, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, -32493, 49, 135, -32508, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32508, 49, 136, -32493, 49,
    -32486, 229, -32501, 49, -32509, 229, 70, 229, -32502, 49, 137, -32499, 49, -32486, 229, -32501, 49, -32509, 229, 70,
    229, -32496, 49, 73, -32505, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49, 138, -32502, 49, -32486,
    229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 139, -32501, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229,
    -32494, 49, 140, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32511, 49, 141, -32490, 49, -32486, 229,
    -32501, 49, -32509, 229, 70, 229, -32505, 49, 143, -32508, 49, 142, -32502, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, 49, 144, -32489, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 146, -32511, 49, 145,
    -32499, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 147, -32496, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32487, 87, -32486, 229, -32501, 87, -32509, 229, 70, 229, -32487, 87, -32486, 229, -32501, 87, -32509,
    229, 70, 229, -32487, 87, -32505, 229, 148, 229, 148, -32497, 229, 87, 149, -32511, 87, -32510, 149, -32508, 87,
    -32509, 229, 70, 229, -32487, 87, -32486, 229, -32501, 87, -32509, 229, 70, 229, -32507, 150, -32493, 87, -32486, 229,
    87, 150, 87, -32506, 150, -32511, 87, -32509, 229, 70, 229, -32510, 87, 90, 89, 90, -32508, 87, 151, -32499,
    87, -32502, 229, 43, -32498, 229, 87, 92, -32511, 87, 93, -32511, 92, 90, 89, 90, 151, 87, -32509, 229,
    70, 229, -32510, 87, 90, 89, 90, -32493, 87, -32502, 229, 43, -32498, 229, 87, 93, -32511, 87, -32510, 93,
    90, 89, 90, -32511, 87, -32509, 229, 70, 229, -32510, 87, 90, 89, 90, -32508, 87, 88, -32499, 87, -32502,
    229, 43, -32498, 229, 87, 94, -32511, 87, -32510, 94, 90, 89, 90, 88, 87, -32509, 229, 70, -32482, 229,
    152, -32475, 229, 70, -32443, 229, 70, -32511, 153, 95, -32510, 153, 95, -32506, 153, 95, -32510, 153, 95, 153,
    95, -32506, 153, 95, -32511, 153, 156, -32498, 153, 157, -32506, 153, 154, -32510, 153, 154, 155, -32508, 153, 229,
    -32511, 153, 229, 70, -32485, 98, 99, -32495, 98, 100, -32495, 98, 229, -32511, 98, 229, 70, -32443, 229, 70,
    -32511, 158, 98, -32510, 158, 98, -32506, 158, 98, -32510, 158, 98, 158, 98, -32506, 158, 98, -32511, 158, 98,
    -32498, 158, 98, -32506, 158, 98, -32510, 158, -32511, 98, -32508, 158, 229, -32511, 158, 229, 70, -32479, 229, 47,
    -32509, 229, 48, -32483, 229, 70, -32474, 229, 101, -32486, 229, 102, -32511, 229, 70, -32443, 229, 70, -32443, 229,
    70, -32479, 105, 106, -32482, 105, 229, -32511, 105, 229, 70, -32479, 105, 106, -32509, 105, 107, -32487, 105, 229,
    -32511, 105, 229, 70, -32474, 229, 159, -32486, 229, 107, -32511, 229, 70, -32478, 229, 148, 229, 148, -32496, 229,
    160, -32511, 229, -32510, 160, -32504, 229, 70, -32443, 229, 70, -32479, 47, 110, -32509, 47, 102, -32487, 47, 229,
    -32511, 47, 229, 70, 229, -32494, 49, 161, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 162, -32488,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32502, 49, 163, -32499, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, -32509, 49, 73, -32492, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32494, 49, 164, -32507, 49,
    -32486, 229, -32501, 49, -32509, 229, 70, 229, -32511, 49, 165, -32490, 49, -32486, 229, -32501, 49, -32509, 229, 70,
    229, -32496, 49, 166, -32505, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49, 78, -32492, 49, -32486,
    229, -32501, 49, -32509, 229, 70, 229, -32494, 49, 125, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229,
    -32500, 49, 167, -32501, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49, 168, -32492, 49, -32486, 229,
    -32501, 49, -32509, 229, 70, 229, -32499, 49, 169, -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32495,
    49, 73, -32506, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32493, 49, 170, -32508, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, -32511, 49, 171, -32490, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32495, 49,
    166, 172, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32495, 49, 123, -32506, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, -32507, 49, 73, -32494, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49,
    173, -32492, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 174, -32496, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, -32502, 49, 175, -32499, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32494, 49, 176,
    -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49, 177, -32492, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32502, 49, 178, -32511, 49, 117, -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 49,
    147, -32489, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 179, -32488, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, -32495, 49, 121, -32506, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 166, -32488, 49, -32486, 229,
    -32501, 49, -32509, 229, 70, 229, 180, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49, 73,
    -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32503, 49, 181, -32498, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32494, 49, 182, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32492, 49, 183, -32509,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32502, 49, 164, -32499, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, 184, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32510, 49, 73, -32491, 49, -32486, 229,
    -32501, 49, -32509, 229, 70, 229, -32502, 49, 114, -32499, 49, -32486, 229, -32501, 49, -32509, 229, 70, -32458, 229,
    160, -32511, 229, -32510, 160, -32504, 229, 70, 229, -32510, 87, 90, 87, 90, -32493, 87, -32486, 229, 87, 149,
    -32511, 87, -32510, 149, 90, 87, 90, -32511, 87, -32509, 229, 70, 229, -32507, 150, -32508, 87, 185, -32499, 87,
    -32486, 229, 87, 150, 87, -32506, 150, 185, 87, -32509, 229, 70, 229, -32487, 87, -32486, 229, -32501, 87, -32509,
    229, 70, -32443, 229, 70, -32482, 229, 96, -32475, 229, 70, -32482, 229, 152, -32490, 229, 186, -32510, 229, -32511,
    186, -32504, 229, 70, -32482, 229, 152, -32490, 229, 187, -32510, 229, -32511, 187, -32504, 229, 70, -32482, 229, 188,
    -32475, 229, 70, -32482, 153, 152, -32498, 153, 189, -32495, 153, 229, -32511, 153, 229, 70, -32485, 158, 190, -32495,
    158, 191, -32495, 158, 229, -32511, 158, 229, 70, -32479, 229, 105, -32509, 229, 192, -32483, 229, 70, -32509, 229,
    109, 229, 109, -32465, 229, 160, -32511, 229, -32510, 160, 109, 229, 109, -32507, 229, 70, 229, -32496, 49, 193,
    -32505, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32503, 49, 73, -32498, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32509, 49, 194, -32492, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 195, -32496,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32506, 49, 196, -32495, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, -32494, 49, 73, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32495, 49, 197, -32506, 49,
    -32486, 229, -32501, 49, -32509, 229, 70, 229, -32487, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32491, 49,
    198, -32510, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32496, 49, 199, -32505, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, -32506, 49, 73, -32495, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 200,
    -32496, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 201, -32501, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32492, 49, 114, -32509, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32487, 49, -32486, 229,
    -32501, 49, -32509, 229, 70, 229, 202, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32496, 49, 203,
    -32505, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49, 204, -32492, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32493, 49, 205, -32508, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32502, 49, 206, -32499,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 207, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229,
    -32509, 49, 208, -32492, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 53, -32488, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, -32494, 49, 86, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32487, 87, -32486,
    229, -32501, 87, -32509, 229, 70, -32482, 229, 188, -32490, 229, 187, -32510, 229, -32511, 187, -32504, 229, 70, -32482,
    229, 188, -32475, 229, 70, -32443, 229, 70, -32482, 153, 96, -32498, 153, 189, -32495, 153, 229, -32511, 153, 229,
    70, -32443, 229, 70, -32447, 158, 229, -32511, 158, 229, 70, -32447, 192, 229, -32511, 192, 229, 70, 229, 209,
    -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, 199, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70,
    229, -32511, 49, 73, -32490, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32496, 49, 210, -32505, 49, -32486,
    229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 211, -32496, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229,
    -32495, 49, 73, -32506, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 73, -32501, 49, -32486, 229,
    -32501, 49, -32509, 229, 70, 229, -32500, 49, 212, -32501, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32510,
    49, 123, -32491, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 213, -32501, 49, -32486, 229, -32501,
    49, -32509, 229, 70, 229, -32508, 49, 214, -32493, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32501, 49,
    215, -32500, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32502, 49, 166, -32499, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, -32502, 49, 216, -32499, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32507, 49, 114,
    -32494, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32511, 49, 217, -32490, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32511, 49, 166, -32490, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49, 218, -32502,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509, 49, 219, -32492, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, -32493, 49, 114, -32508, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32511, 49, 220, -32490, 49,
    -32486, 229, -32501, 49, -32509, 229, 70, 229, 221, -32488, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32509,
    49, 222, -32492, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32489, 49, 73, 49, -32486, 229, -32501, 49,
    -32509, 229, 70, 229, -32494, 49, 223, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 224,
    -32501, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 166, -32501, 49, -32486, 229, -32501, 49, -32509,
    229, 70, 229, -32509, 49, 225, -32492, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32511, 49, 114, -32490,
    49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32500, 49, 226, -32501, 49, -32486, 229, -32501, 49, -32509, 229,
    70, 229, -32509, 49, 146, -32492, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32505, 49, 227, -32496, 49,
    -32486, 229, -32501, 49, -32509, 229, 70, 229, -32499, 49, 228, -32502, 49, -32486, 229, -32501, 49, -32509, 229, 70,
    229, -32494, 49, 123, -32507, 49, -32486, 229, -32501, 49, -32509, 229, 70, 229, -32488, 49, 223, -32486, 229, -32501,
    49, -32509, 229, 70, 229, -32508, 49, 73, -32493, 49, -32486, 229, -32501, 49, -32509, 229};

    // Forward DFA recognition table.

    private static final int[] gen_fwdRecognitionTable = 
    {0, 1, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 7, 8, 9, 10, 11, 12, 13,
    13, 14, 14, 15, 16, 16, 16, 17, 1, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 19, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 18, 18, 20, 21, 20, 22, 20, 23, 20, 21, 24, 24, 24, 25, 26,
    25, 0, 1, 27, 28, 2, 2, 29, 0, 15, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 18, 18, 18, 0, 22, 30, 23, 31, 24, 24, 24, 24, 24, 25, 0,
    15, 18, 18, 18, 18, 18, 18, 18, 32, 18, 18, 18, 18, 18, 18, 33, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 30, 0, 0, 34, 24, 35, 25, 29, 18, 18, 18, 18, 18, 19, 18,
    18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 18, 18, 18, 18};

    // Forward DFA token list.

    private static final int[] gen_fwdTokenListLength = 
    {0, 1, 1, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
    1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1};

    private static final int[][] gen_fwdTokenList = 
    {
        {},
        {16},
        {21},
        {0, 23},
        {1, 23},
        {11, 23},
        {5, 12, 23},
        {13, 23},
        {23},
        {15, 23},
        {12, 23},
        {16, 23},
        {19, 23},
        {22, 23},
        {21, 23},
        {8},
        {1},
        {17},
        {11},
        {2, 11},
        {12},
        {5, 12},
        {8, 12},
        {7, 12},
        {13},
        {15},
        {10, 14},
        {18},
        {22},
        {20},
        {6, 12},
        {9, 13},
        {3, 11},
        {4, 11},
        {9},
        {14}
    };

    // Forward DFA context split table.

    private static boolean[][] gen_fwdContextSplit = null;
    private static byte[] rle_fwdContextSplit = 
    {0, 36, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
    -128, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
    0, 0, 1, 0, 0, 1, 0, 0, 1, 0};

    // The number of states in the reverse DFA.

    private static final int gen_revStateCount = 2;

    // The number of recognition codes in the reverse DFA.

    private static final int gen_revRecognitionCount = 2;

    // Reverse DFA transition table.

    private static short[][] gen_revTransitionTable = null;
    private static short[] rle_revTransitionTable = 
    {2, 70, -32443, 1, 70, -32443, 2};

    // Reverse DFA recognition table.

    private static final int[] gen_revRecognitionTable = 
    {0, 1};

    // Reverse DFA context split table.

    private static boolean[][] gen_revContextSplit = null;
    private static byte[] rle_revContextSplit = 
    {0, 2, 0, 1, 0, 0, 1, -128};

    // The names of start conditions.

    private static final String[] gen_conditionNames = 
    {
        "notInComment",
        "inComment"
    };

    // The names of tokens.

    private static final String[] gen_tokenNames = 
    {
        "separator",
        "operator",
        "keyword",
        "booleanLiteral",
        "nullLiteral",
        "decimalIntegerLiteral",
        "hexIntegerLiteral",
        "octalIntegerLiteral",
        "floatingPointLiteral",
        "characterLiteral",
        "stringLiteral",
        "identifier",
        "illegalNumberLiteral",
        "illegalCharacterLiteral",
        "illegalStringLiteral",
        "runOnStringLiteral",
        "whiteSpace",
        "beginComment",
        "illegalChar",
        "whiteSpace",
        "endComment",
        "whiteSpace",
        "lineEnd",
        "illegalChar"
    };

    // The link name for each token.

    private static final String[] gen_tokenLink = 
    {
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    };




    // RLE decoding function

    private static synchronized void decodeRLE ()
    {
        if (gen_categoryTable == null)
        {
            gen_categoryTable = ArrayRLE.byteRLEToByte1D (rle_categoryTable);
            rle_categoryTable = null;
        }

        if (gen_fwdTransitionTable == null)
        {
            gen_fwdTransitionTable = ArrayRLE.shortRLEToShort2D (rle_fwdTransitionTable);
            rle_fwdTransitionTable = null;
        }

        if (gen_fwdContextSplit == null)
        {
            gen_fwdContextSplit = ArrayRLE.booleanRLEToBoolean2D (rle_fwdContextSplit);
            rle_fwdContextSplit = null;
        }

        if (gen_revTransitionTable == null)
        {
            gen_revTransitionTable = ArrayRLE.shortRLEToShort2D (rle_revTransitionTable);
            rle_revTransitionTable = null;
        }

        if (gen_revContextSplit == null)
        {
            gen_revContextSplit = ArrayRLE.booleanRLEToBoolean2D (rle_revContextSplit);
            rle_revContextSplit = null;
        }

        return;
    }




    // Constructor installs the generated tables into the ScannerTable

    public Ex4GrammarScannerTable ()
    {
        super ();

        // Decode the run-length-encoded tables

        decodeRLE ();

        // Copy scanning tables into the ScannerTable superclass

        _categoryCount = gen_categoryCount;
        _charSetSize = gen_charSetSize;
        _categoryTable = gen_categoryTable;
        _tokenCount = gen_tokenCount;
        _tokenParam = gen_tokenParam;
        _contextCount = gen_contextCount;
        _contextNumber = gen_contextNumber;
        _conditionCount = gen_conditionCount;
        _fwdStateCount = gen_fwdStateCount;
        _fwdRecognitionCount = gen_fwdRecognitionCount;
        _fwdInitialState = gen_fwdInitialState;
        _fwdTransitionTable = gen_fwdTransitionTable;
        _fwdRecognitionTable = gen_fwdRecognitionTable;
        _fwdTokenListLength = gen_fwdTokenListLength;
        _fwdTokenList = gen_fwdTokenList;
        _fwdContextSplit = gen_fwdContextSplit;
        _revStateCount = gen_revStateCount;
        _revRecognitionCount = gen_revRecognitionCount;
        _revTransitionTable = gen_revTransitionTable;
        _revRecognitionTable = gen_revRecognitionTable;
        _revContextSplit = gen_revContextSplit;

        // Copy dynamic-link tables into the ScannerTable superclass

        _conditionNames = gen_conditionNames;
        _tokenNames = gen_tokenNames;
        _tokenLink = gen_tokenLink;

        return;
    }


}

