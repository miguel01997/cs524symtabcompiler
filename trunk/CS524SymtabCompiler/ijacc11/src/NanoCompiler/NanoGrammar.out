Reading grammar specification ...

Generating character category table ...

Character category table:

  0x0 - 0x8
    Category number: 0
    User categories: anyCtg notEol

  0x9 - 0x9
    Category number: 45
    User categories: anyCtg spaceCtg notEol

  0xA - 0xA
    Category number: 44
    User categories: anyCtg lfCtg

  0xB - 0xB
    Category number: 0
    User categories: anyCtg notEol

  0xC - 0xC
    Category number: 45
    User categories: anyCtg spaceCtg notEol

  0xD - 0xD
    Category number: 43
    User categories: anyCtg crCtg

  0xE - 0x1F
    Category number: 0
    User categories: anyCtg notEol

  0x20 - 0x20
    Category number: 45
    User categories: anyCtg spaceCtg notEol

  0x21 - 0x21
    Category number: 0
    User categories: anyCtg notEol

  0x22 - 0x22
    Category number: 30
    User categories: quoteCtg anyCtg notEol

  0x23 - 0x27
    Category number: 0
    User categories: anyCtg notEol

  0x28 - 0x28
    Category number: 34
    User categories: lparenCtg anyCtg notEol

  0x29 - 0x29
    Category number: 35
    User categories: rparenCtg anyCtg notEol

  0x2A - 0x2A
    Category number: 27
    User categories: starCtg anyCtg notEol

  0x2B - 0x2B
    Category number: 36
    User categories: plusCtg anyCtg notEol

  0x2C - 0x2C
    Category number: 31
    User categories: commaCtg anyCtg notEol

  0x2D - 0x2D
    Category number: 37
    User categories: minusCtg anyCtg notEol

  0x2E - 0x2E
    Category number: 0
    User categories: anyCtg notEol

  0x2F - 0x2F
    Category number: 28
    User categories: slashCtg anyCtg notEol

  0x30 - 0x39
    Category number: 42
    User categories: anyCtg digitCtg notEol

  0x3A - 0x3A
    Category number: 33
    User categories: colonCtg anyCtg notEol

  0x3B - 0x3B
    Category number: 32
    User categories: semicolonCtg anyCtg notEol

  0x3C - 0x3C
    Category number: 39
    User categories: lessThanCtg anyCtg notEol

  0x3D - 0x3D
    Category number: 38
    User categories: equalsCtg anyCtg notEol

  0x3E - 0x3E
    Category number: 40
    User categories: greaterThanCtg anyCtg notEol

  0x3F - 0x40
    Category number: 0
    User categories: anyCtg notEol

  0x41 - 0x5A
    Category number: 41
    User categories: anyCtg letterCtg notEol

  0x5B - 0x5E
    Category number: 0
    User categories: anyCtg notEol

  0x5F - 0x5F
    Category number: 29
    User categories: underCtg anyCtg notEol

  0x60 - 0x60
    Category number: 0
    User categories: anyCtg notEol

  0x61 - 0x61
    Category number: 1
    User categories: a anyCtg letterCtg notEol

  0x62 - 0x62
    Category number: 2
    User categories: b anyCtg letterCtg notEol

  0x63 - 0x63
    Category number: 3
    User categories: c anyCtg letterCtg notEol

  0x64 - 0x64
    Category number: 4
    User categories: d anyCtg letterCtg notEol

  0x65 - 0x65
    Category number: 5
    User categories: e anyCtg letterCtg notEol

  0x66 - 0x66
    Category number: 6
    User categories: f anyCtg letterCtg notEol

  0x67 - 0x67
    Category number: 7
    User categories: g anyCtg letterCtg notEol

  0x68 - 0x68
    Category number: 8
    User categories: h anyCtg letterCtg notEol

  0x69 - 0x69
    Category number: 9
    User categories: i anyCtg letterCtg notEol

  0x6A - 0x6A
    Category number: 10
    User categories: j anyCtg letterCtg notEol

  0x6B - 0x6B
    Category number: 11
    User categories: k anyCtg letterCtg notEol

  0x6C - 0x6C
    Category number: 12
    User categories: l anyCtg letterCtg notEol

  0x6D - 0x6D
    Category number: 13
    User categories: m anyCtg letterCtg notEol

  0x6E - 0x6E
    Category number: 14
    User categories: n anyCtg letterCtg notEol

  0x6F - 0x6F
    Category number: 15
    User categories: o anyCtg letterCtg notEol

  0x70 - 0x70
    Category number: 16
    User categories: p anyCtg letterCtg notEol

  0x71 - 0x71
    Category number: 17
    User categories: q anyCtg letterCtg notEol

  0x72 - 0x72
    Category number: 18
    User categories: r anyCtg letterCtg notEol

  0x73 - 0x73
    Category number: 19
    User categories: s anyCtg letterCtg notEol

  0x74 - 0x74
    Category number: 20
    User categories: t anyCtg letterCtg notEol

  0x75 - 0x75
    Category number: 21
    User categories: u anyCtg letterCtg notEol

  0x76 - 0x76
    Category number: 22
    User categories: v anyCtg letterCtg notEol

  0x77 - 0x77
    Category number: 23
    User categories: w anyCtg letterCtg notEol

  0x78 - 0x78
    Category number: 24
    User categories: x anyCtg letterCtg notEol

  0x79 - 0x79
    Category number: 25
    User categories: y anyCtg letterCtg notEol

  0x7A - 0x7A
    Category number: 26
    User categories: z anyCtg letterCtg notEol

  0x7B - 0xFF
    Category number: 0
    User categories: anyCtg notEol

47 user-defined categories.
46 calculated categories.

Generating token deterministic finite automata ...

Start conditions:

  notInComment
    Initial forward DFA state: 1

  inBracketComment
    Initial forward DFA state: 1

  inLineComment
    Initial forward DFA state: 1

Tokens:

  Token 0
    plus = 'plusCtg'
    Parameter: 1

  Token 1
    minus = 'minusCtg'
    Parameter: 2

  Token 2
    lparen = 'lparenCtg'
    Parameter: 3

  Token 3
    rparen = 'rparenCtg'
    Parameter: 4

  Token 4
    intConst = 'digitCtg'+
    Parameter: 5

  Token 5
    semicolon = 'semicolonCtg'
    Parameter: 6

  Token 6
    whiteSpace = 'spaceCtg'* ('slashCtg' 'slashCtg' 'notEol'*)?
    Parameter: 0

  Token 7
    lineEnd = 'crCtg' | 'lfCtg' | 'crCtg' 'lfCtg'
    Parameter: 0

Forward DFA States:

  State 0
    Recognition code: 0

  State 1
    Goto 2: 36
    Goto 3: 37
    Goto 4: 34
    Goto 5: 35
    Goto 6: 42
    Goto 7: 32
    Goto 8: 45
    Goto 9: 28
    Goto 10: 43
    Goto 11: 44
    Recognition code: 1

  State 2
    Recognition code: 2

  State 3
    Recognition code: 3

  State 4
    Recognition code: 4

  State 5
    Recognition code: 5

  State 6
    Goto 6: 42
    Recognition code: 6

  State 7
    Recognition code: 7

  State 8
    Goto 8: 45
    Goto 9: 28
    Recognition code: 1

  State 9
    Goto 12: 28
    Recognition code: 0

  State 10
    Goto 11: 44
    Recognition code: 8

  State 11
    Recognition code: 8

  State 12
    Goto 12: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 45
    Recognition code: 1

Forward DFA Recognition Codes:

  Recognition code 0

  Recognition code 1
    Tokens:  6

  Recognition code 2
    Tokens:  0

  Recognition code 3
    Tokens:  1

  Recognition code 4
    Tokens:  2

  Recognition code 5
    Tokens:  3

  Recognition code 6
    Tokens:  4

  Recognition code 7
    Tokens:  5

  Recognition code 8
    Tokens:  7

Reverse DFA States:

  State 0
    Recognition code: 0

Reverse DFA Recognition Codes:

  Recognition code 0

3 start conditions.
8 tokens.
13 states in the forward DFA.
9 final state recognition codes in the forward DFA.
1 states in the reverse DFA.
1 final state recognition codes in the reverse DFA.

Generating LALR(1) configuration finite state machine ...

Terminal symbols:

  %%EOF
    Insertion cost: 1
    Deletion cost: 1

  plus
    Insertion cost: 1
    Deletion cost: 1

  minus
    Insertion cost: 1
    Deletion cost: 1

  lparen
    Insertion cost: 1
    Deletion cost: 1

  rparen
    Insertion cost: 1
    Deletion cost: 1

  intConst
    Insertion cost: 1
    Deletion cost: 1

  semicolon
    Insertion cost: 1
    Deletion cost: 1

Nonterminal symbols:

  StatementList

  Goal

  Statement

  Expression

  Primary

  %%Goal

Productions:

  Production 0
    Goal -> StatementList
    Parameter: 0
    Cost: 1

  Production 1
    StatementList ->
    Parameter: 0
    Cost: 0

  Production 2
    StatementList -> StatementList Statement
    Parameter: 0
    Cost: 6

  Production 3
    Statement -> Expression semicolon
    Parameter: 0
    Cost: 4

  Production 4
    Expression -> Primary
    Link name: primary
    Parameter: 0
    Cost: 2

  Production 5
    Expression -> Expression plus Primary
    Link name: add
    Parameter: 0
    Cost: 6

  Production 6
    Expression -> Expression minus Primary
    Link name: subtract
    Parameter: 0
    Cost: 6

  Production 7
    Primary -> intConst
    Link name: number
    Parameter: 0
    Cost: 1

  Production 8
    Primary -> lparen Expression rparen
    Link name: paren
    Parameter: 0
    Cost: 5

  Production 9
    %%Goal -> Goal %%EOF
    Parameter: 0
    Cost: 3

Error repair options:

  Maximum insertions: 100

  Maximum deletions: 200

  Validation length: 5

  Single-point insertion list:

    plus
    minus
    lparen
    rparen
    intConst
    semicolon

Parser generator algorithm statistics:

  Number of raw LR(0) states: 16

  Number of raw LR(1) states: 16

  Number of iterative passes to generate LR(1) states: 3

  Number of reachable LR(1) states on each pass:
    Pass 0: 1
    Pass 1: 14
    Pass 2: 16

  Number of iterative passes to generate production costs: 4

  Number of iterative passes to generate conflict avoidance tables: 1

  Number of parsing conflicts successfully resolved: 0

LALR(1) configuration finite state machine:

  State 0:
    %%Goal -> _ Goal %%EOF  {}

    Reduce 1: %%EOF lparen intConst
    Shift-Goto 1: StatementList
    Shift-Goto 2: Goal
    Unwind: Reduce 1

  State 1:
    Goal -> StatementList _  {%%EOF}
    StatementList -> StatementList _ Statement  {%%EOF, lparen, intConst}

    Reduce 0: %%EOF
    Shift-Reduce 2: Statement
    Shift-Reduce 4: Primary
    Shift-Reduce 7: intConst
    Shift-Goto 3: lparen
    Shift-Goto 4: Expression
    Unwind: Reduce 0

  State 2:
    %%Goal -> Goal _ %%EOF  {}

    Accept: %%EOF
    Unwind: Accept

  State 3:
    Primary -> lparen _ Expression rparen  {plus, minus, rparen, semicolon}

    Shift-Reduce 4: Primary
    Shift-Reduce 7: intConst
    Shift-Goto 3: lparen
    Shift-Goto 6: Expression
    Unwind: Shift intConst Reduce 7

  State 4:
    Statement -> Expression _ semicolon  {%%EOF, lparen, intConst}
    Expression -> Expression _ plus Primary  {plus, minus, semicolon}
    Expression -> Expression _ minus Primary  {plus, minus, semicolon}

    Shift-Reduce 3: semicolon
    Shift-Goto 7: plus
    Shift-Goto 8: minus
    Unwind: Shift semicolon Reduce 3

  State 5:
    %%Goal -> Goal %%EOF _  {}

    Unwind: Reduce 9

  State 6:
    Primary -> lparen Expression _ rparen  {plus, minus, rparen, semicolon}
    Expression -> Expression _ plus Primary  {plus, minus, rparen}
    Expression -> Expression _ minus Primary  {plus, minus, rparen}

    Shift-Reduce 8: rparen
    Shift-Goto 7: plus
    Shift-Goto 8: minus
    Unwind: Shift rparen Reduce 8

  State 7:
    Expression -> Expression plus _ Primary  {plus, minus, rparen, semicolon}

    Shift-Reduce 5: Primary
    Shift-Reduce 7: intConst
    Shift-Goto 3: lparen
    Unwind: Shift intConst Reduce 7

  State 8:
    Expression -> Expression minus _ Primary  {plus, minus, rparen, semicolon}

    Shift-Reduce 6: Primary
    Shift-Reduce 7: intConst
    Shift-Goto 3: lparen
    Unwind: Shift intConst Reduce 7

13 symbols.
10 productions.
9 LALR(1) machine states.

Writing scanner table Java source ...
Writing parser table Java source ...

All tables generated successfully.
