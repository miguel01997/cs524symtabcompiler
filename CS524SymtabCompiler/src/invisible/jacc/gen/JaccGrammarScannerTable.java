// File generated by Invisible Jacc version 1.1.
// Invisible Jacc is Copyright 1997-1998 Invisible Software, Inc.

package invisible.jacc.gen;

import invisible.jacc.parse.ScannerTable;
import invisible.jacc.util.ArrayRLE;

public class JaccGrammarScannerTable extends ScannerTable
{

    // The number of different character categories.

    private static final int gen_categoryCount = 58;

    // The character set size.

    private static final int gen_charSetSize = 256;

    // The character category table.

    private static byte[] gen_categoryTable = null;
    private static short[] rle_categoryTable = 
    {256, 2048, 52, 53, 0, 52, 56, 2816, 57, 1024, 52, 256, 46, 50, 27, 36, 42, 38, 39, 30,
    31, 0, 33, 47, 43, 48, 49, 1843, 28, 29, 0, 44, 34, 32, 37, 1334, 4146, 55, 306, 768,
    50, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    19, 20, 21, 22, 23, 24, 25, 26, 40, 45, 41, 35, 10752, 50, 2304, 50, 768, 50, 1024, 5682,
    0, 7730, 0, 1842};

    // The number of tokens.

    private static final int gen_tokenCount = 57;

    // The token parameters.

    private static final int[] gen_tokenParam = 
    {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
    41, 42, 43, 0, 45, 45, 45, 44, 44, 0, 0, 0, 0, 0, 0, 0, 0};

    // The number of tokens that have a right context.

    private static final int gen_contextCount = 1;

    // Context number table.

    private static final int[] gen_contextNumber = 
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1};

    // The number of start conditions for the forward DFA.

    private static final int gen_conditionCount = 2;

    // The number of states in the forward DFA.

    private static final int gen_fwdStateCount = 199;

    // The number of recognition codes in the forward DFA.

    private static final int gen_fwdRecognitionCount = 64;

    // Forward DFA initial state table.

    private static final int[] gen_fwdInitialState = 
    {1, 2};

    // Forward DFA transition table.

    private static short[][] gen_fwdTransitionTable = null;
    private static short[] rle_fwdTransitionTable = 
    {199, 58, -32455, 199, 58, 21, -32487, 23, 22, 11, 12, 7, 8, 9, 3, 21, 4, 5, 6, 14,
    15, 16, 17, 26, 10, 13, 18, 19, 20, 25, 24, 23, 24, 28, 29, -32511, 23, 30, 27, 58,
    -32483, 31, 32, -32491, 31, 29, -32511, 31, 30, 31, 58, -32479, 199, 33, -32490, 199, 58, -32455, 199, 58,
    -32455, 199, 58, -32455, 199, 58, -32455, 199, 58, -32455, 199, 58, -32455, 199, 58, -32483, 199, 34, -32501, 199,
    35, -32499, 199, 58, -32455, 199, 58, -32455, 199, 58, -32455, 199, 58, -32455, 199, 58, -32455, 199, 58, -32455,
    199, 58, -32455, 199, 58, -32455, 199, 58, -32455, 199, 58, -32466, 199, 36, -32503, 199, 58, -32455, 199, 58,
    199, 43, 39, 42, 46, -32511, 39, 44, -32511, 39, 50, 39, 47, 39, 40, 38, 48, 39, 45, 41,
    37, 49, -32508, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 51, -32492, 199,
    -32509, 51, -32511, 199, -32511, 51, -32511, 199, 58, 199, -32487, 52, -32492, 199, -32511, 53, 52, 53, -32511, 199,
    -32511, 52, -32511, 199, 58, 199, -32490, 52, 54, -32511, 52, -32492, 199, -32511, 53, 52, 53, -32511, 199, 52,
    54, -32511, 199, 58, -32471, 55, 56, -32504, 55, -32511, 199, -32511, 55, 199, 55, 58, -32455, 57, 58, -32470,
    199, 58, -32505, 199, 59, -32508, 199, 58, -32455, 199, 58, -32460, 199, 60, -32509, 199, 58, -32483, 61, 62,
    -32491, 61, 199, -32511, 61, 199, 61, 58, -32483, 61, 62, -32501, 61, 63, -32504, 61, 199, -32511, 61, 199,
    61, 58, -32455, 199, 58, -32483, 34, 64, -32491, 34, 199, -32511, 34, 199, 34, 58, -32460, 35, 199, -32511,
    35, 199, 35, 58, -32455, 199, 58, 199, -32509, 39, 66, -32510, 39, 67, -32508, 39, 65, -32502, 39, -32492,
    199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32498, 39, 68, -32503, 39, -32492, 199, -32509, 39,
    -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199,
    58, 199, -32499, 39, 69, -32502, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32506,
    39, 70, -32495, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, 72, -32507, 39, 73,
    -32507, 39, 71, -32502, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32500, 39, 74,
    -32501, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32499, 39, 75, -32502, 39, -32492,
    199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 76, -32492, 39, -32492, 199, -32509, 39,
    -32511, 199, -32511, 39, -32511, 199, 58, 199, -32505, 39, 77, -32496, 39, -32492, 199, -32509, 39, -32511, 199, -32511,
    39, -32511, 199, 58, 199, 80, -32510, 39, 79, -32504, 39, 78, -32511, 39, 81, -32505, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32502, 39, 83, -32508, 39, 82, -32505, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32500, 39, 84, 39, 85, -32503, 39, -32492, 199, -32509, 39,
    -32511, 199, -32511, 39, -32511, 199, 58, 199, 86, -32488, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32487, 51, -32492, 199, -32509, 51, -32511, 199, -32511, 51, -32511, 199, 58, 199, -32487, 52, -32492,
    199, -32509, 52, -32511, 199, -32511, 52, -32511, 199, 58, 199, -32487, 52, -32492, 199, -32511, 53, 52, 53, -32511,
    199, -32511, 52, -32511, 199, 58, 199, -32507, 87, -32493, 52, -32492, 199, -32511, 87, 52, 87, -32511, 199, 87,
    52, -32511, 199, 58, -32471, 55, 88, -32504, 55, -32511, 199, -32511, 55, 199, 55, 58, -32471, 55, 88, -32504,
    55, -32511, 199, -32511, 55, 199, 55, 58, -32455, 199, 58, -32483, 199, 34, -32501, 199, 35, -32499, 199, 58,
    -32470, 199, 58, -32505, 199, 59, -32508, 199, 58, -32455, 199, 58, -32483, 61, 62, -32491, 61, 199, -32511, 61,
    199, 61, 58, -32483, 61, 62, -32501, 61, 63, -32504, 61, 199, -32511, 61, 199, 61, 58, -32470, 199, 89,
    -32505, 199, 63, -32508, 199, 58, -32483, 34, 64, -32501, 34, 59, -32504, 34, 199, -32511, 34, 199, 34, 58,
    199, -32503, 39, 90, -32498, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32496, 39,
    91, -32505, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39, 92, -32507, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39, 93, -32507, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32500, 39, 94, -32501, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32505, 39, 95, -32496, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32500, 39, 96, -32501, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32494, 39, 97, -32507, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, 98, -32488, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32489, 39, 99, 39, -32492, 199, -32509, 39,
    -32511, 199, -32511, 39, -32511, 199, 58, 199, 100, -32488, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32510, 39, 101, -32502, 39, 102, -32503, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32507, 39, 103, -32494, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32491, 39, 104, -32510, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39, 105,
    -32507, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32502, 39, 106, -32499, 39, -32492,
    199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, 39, 107, -32511, 39, -32511,
    199, -32511, 39, -32511, 199, 58, 199, -32499, 39, 108, -32502, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39,
    -32511, 199, 58, 199, -32496, 39, 109, -32505, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58,
    199, -32505, 39, 110, -32496, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32498, 39,
    111, -32503, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32492, 39, 112, -32509, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32507, 87, -32493, 52, -32492, 199, -32511, 87,
    52, 87, -32511, 199, 87, 52, -32511, 199, 58, -32471, 199, 113, -32498, 199, 58, -32483, 199, 61, -32501, 199,
    114, -32499, 199, 58, 199, -32509, 39, 115, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199,
    58, 199, -32501, 39, 116, -32500, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32502,
    39, 117, -32499, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32505, 39, 118, -32496,
    39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 119, -32492, 39, -32492, 199,
    -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32508, 39, 120, -32493, 39, -32492, 199, -32509, 39, -32511,
    199, -32511, 39, -32511, 199, 58, 199, -32510, 39, 121, -32491, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39,
    -32511, 199, 58, 199, -32509, 39, 122, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58,
    199, -32496, 39, 123, -32505, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32502, 39, 124, -32499, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32493, 39, 125, -32508, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, 126, -32488, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58,
    199, -32505, 39, 127, -32496, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39,
    128, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39, 129, -32507, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32496, 39, 130, -32505, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32510, 39, 131, -32491, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32487, 39, -32492, 199, 39, 132, -32511, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32511, 39, 133, -32490,
    39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 134, -32492, 39, -32492, 199,
    -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, 135, -32488, 39, -32492, 199, -32509, 39, -32511, 199, -32511,
    39, -32511, 199, 58, -32455, 199, 58, -32460, 114, 199, -32511, 114, 199, 114, 58, 199, -32500, 39, 136, -32501,
    39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32505, 39, 137, -32496, 39, -32492, 199,
    -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 138, -32492, 39, -32492, 199, -32509, 39, -32511,
    199, -32511, 39, -32511, 199, 58, 199, -32499, 39, 139, -32502, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39,
    -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39,
    140, -32507, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32505, 39, 141, -32496, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32507, 39, 142, -32494, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32495, 39, 143, -32506, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32511, 39, 144, -32490, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32505, 39, 145,
    -32496, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39, 146, -32507, 39, -32492,
    199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32496, 39, 147, -32505, 39, -32492, 199, -32509, 39,
    -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 148, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511,
    39, -32511, 199, 58, 199, -32487, 39, -32492, 199, 39, 149, -32511, 39, -32511, 199, -32511, 39, -32511, 199, 58,
    199, -32493, 39, 150, -32508, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32499, 39, 151, -32502, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32496, 39, 152, -32505, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32495, 39, 153, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32500, 39, 154,
    -32501, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32511, 39, 155, -32490, 39, -32492,
    199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32500, 39, 156, -32501, 39, -32492, 199, -32509, 39,
    -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199,
    58, 199, -32494, 39, 157, -32507, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32499,
    39, 158, -32502, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 159, -32492,
    39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 160, -32492, 39, -32492, 199,
    -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32496, 39, 161, -32505, 39, -32492, 199, -32509, 39, -32511,
    199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58,
    199, -32511, 39, 162, -32490, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32496, 39,
    163, -32505, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32511, 39, 164, -32490, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32510, 39, 165, -32491, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32511, 39, 166, -32490, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, 167, -32488, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, 168, -32488, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39,
    -32511, 199, 58, 199, -32495, 39, 169, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58,
    199, -32505, 39, 170, -32496, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32496, 39,
    171, -32505, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39, 172, -32507, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    173, -32488, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32494, 39, 174, -32507, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32509, 39, 175, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, 176, -32488, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32502, 39,
    177, -32499, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32495, 39, 178, -32506, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32499, 39, 179, -32502, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32505, 39, 180, -32496, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32495, 39, 181, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32495, 39, 182,
    -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32505, 39, 183, -32496, 39, -32492,
    199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511,
    39, -32511, 199, 58, 199, -32495, 39, 184, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199,
    58, 199, -32495, 39, 185, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509,
    39, 186, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32500, 39, 187, -32501,
    39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 188, -32492, 39, -32492, 199,
    -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32505, 39, 189, -32496, 39, -32492, 199, -32509, 39, -32511,
    199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 190, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39,
    -32511, 199, 58, 199, -32499, 39, 191, -32502, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58,
    199, -32509, 39, 192, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39,
    -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32495, 39, 193, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511,
    199, 58, 199, -32495, 39, 194, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32488, 39, 195, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509,
    39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32500, 39, 196, -32501, 39, -32492, 199, -32509, 39, -32511, 199,
    -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199,
    -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199, -32509, 39,
    -32511, 199, -32511, 39, -32511, 199, 58, 199, -32509, 39, 197, -32492, 39, -32492, 199, -32509, 39, -32511, 199, -32511,
    39, -32511, 199, 58, 199, -32495, 39, 198, -32506, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199,
    58, 199, -32487, 39, -32492, 199, -32509, 39, -32511, 199, -32511, 39, -32511, 199, 58, 199, -32487, 39, -32492, 199,
    -32509, 39, -32511, 199, -32511, 39, -32511, 199};

    // Forward DFA recognition table.

    private static final int[] gen_fwdRecognitionTable = 
    {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
    20, 21, 22, 23, 24, 24, 21, 25, 26, 27, 27, 28, 28, 29, 30, 1, 31, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 34, 35, 34, 0, 36, 37, 0, 1,
    38, 2, 2, 39, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 40, 36, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 41,
    32, 32, 32, 32, 32, 32, 32, 42, 32, 32, 32, 32, 32, 36, 39, 32, 32, 32, 32, 43,
    32, 32, 32, 32, 44, 32, 32, 32, 32, 32, 32, 32, 45, 32, 32, 46, 32, 32, 32, 32,
    47, 32, 32, 32, 32, 32, 48, 32, 32, 49, 32, 32, 32, 50, 32, 32, 32, 32, 32, 32,
    51, 52, 32, 53, 32, 32, 32, 32, 32, 54, 32, 32, 32, 32, 32, 55, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 56, 57, 32, 32, 32, 58, 32, 59, 60, 61, 32, 32, 62, 63};

    // Forward DFA token list.

    private static final int[] gen_fwdTokenListLength = 
    {0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2};

    private static final int[][] gen_fwdTokenList = 
    {
        {},
        {49},
        {54},
        {0, 56},
        {1, 56},
        {2, 56},
        {3, 56},
        {4, 56},
        {5, 56},
        {6, 56},
        {7, 56},
        {8, 56},
        {9, 56},
        {10, 56},
        {11, 56},
        {12, 56},
        {13, 56},
        {14, 56},
        {15, 56},
        {16, 56},
        {17, 56},
        {56},
        {43, 56},
        {47, 56},
        {44, 56},
        {52, 56},
        {49, 56},
        {55, 56},
        {54, 56},
        {18},
        {50},
        {19},
        {43},
        {47},
        {46},
        {44},
        {48},
        {51},
        {55},
        {53},
        {45, 46},
        {32, 43},
        {29, 43},
        {33, 43},
        {41, 43},
        {30, 43},
        {42, 43},
        {25, 43},
        {39, 43},
        {31, 43},
        {20, 43},
        {26, 43},
        {28, 43},
        {38, 43},
        {27, 43},
        {34, 43},
        {23, 43},
        {37, 43},
        {36, 43},
        {35, 43},
        {22, 43},
        {21, 43},
        {40, 43},
        {24, 43}
    };

    // Forward DFA context split table.

    private static boolean[][] gen_fwdContextSplit = null;
    private static byte[] rle_fwdContextSplit = 
    {0, 64, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
    0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -128,
    0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
    0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
    0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0};

    // The number of states in the reverse DFA.

    private static final int gen_revStateCount = 2;

    // The number of recognition codes in the reverse DFA.

    private static final int gen_revRecognitionCount = 2;

    // Reverse DFA transition table.

    private static short[][] gen_revTransitionTable = null;
    private static short[] rle_revTransitionTable = 
    {2, 58, -32455, 1, 58, -32455, 2};

    // Reverse DFA recognition table.

    private static final int[] gen_revRecognitionTable = 
    {0, 1};

    // Reverse DFA context split table.

    private static boolean[][] gen_revContextSplit = null;
    private static byte[] rle_revContextSplit = 
    {0, 2, 0, 1, 0, 0, 1, -128};

    // The names of start conditions.

    private static final String[] gen_conditionNames = 
    {
        "notInComment",
        "inComment"
    };

    // The names of tokens.

    private static final String[] gen_tokenNames = 
    {
        "-",
        "~",
        "&",
        "@",
        "*",
        "+",
        "?",
        "/",
        ":",
        ";",
        "=",
        "(",
        ")",
        "{",
        "}",
        "|",
        "#",
        ".",
        "->",
        "..",
        "%tokens",
        "%categories",
        "%conditions",
        "%terminals",
        "%productions",
        "%shift",
        "%reduce",
        "%options",
        "%repair",
        "%lr1",
        "%plr1",
        "%lalr1",
        "%any",
        "%none",
        "%unicode",
        "%uppercase",
        "%lowercase",
        "%titlecase",
        "%letter",
        "%digit",
        "%charsetsize",
        "%goal",
        "%java",
        "unknownKeyword",
        "number",
        "number",
        "number",
        "identifier",
        "identifier",
        "whiteSpace",
        "beginComment",
        "illegalChar",
        "whiteSpace",
        "endComment",
        "whiteSpace",
        "lineEnd",
        "illegalChar"
    };

    // The link name for each token.

    private static final String[] gen_tokenLink = 
    {
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "decimal",
        "hex",
        "illegal",
        "unquoted",
        "quoted",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    };




    // RLE decoding function

    private static synchronized void decodeRLE ()
    {
        if (gen_categoryTable == null)
        {
            gen_categoryTable = ArrayRLE.byteRLEToByte1D (rle_categoryTable);
            rle_categoryTable = null;
        }

        if (gen_fwdTransitionTable == null)
        {
            gen_fwdTransitionTable = ArrayRLE.shortRLEToShort2D (rle_fwdTransitionTable);
            rle_fwdTransitionTable = null;
        }

        if (gen_fwdContextSplit == null)
        {
            gen_fwdContextSplit = ArrayRLE.booleanRLEToBoolean2D (rle_fwdContextSplit);
            rle_fwdContextSplit = null;
        }

        if (gen_revTransitionTable == null)
        {
            gen_revTransitionTable = ArrayRLE.shortRLEToShort2D (rle_revTransitionTable);
            rle_revTransitionTable = null;
        }

        if (gen_revContextSplit == null)
        {
            gen_revContextSplit = ArrayRLE.booleanRLEToBoolean2D (rle_revContextSplit);
            rle_revContextSplit = null;
        }

        return;
    }




    // Constructor installs the generated tables into the ScannerTable

    public JaccGrammarScannerTable ()
    {
        super ();

        // Decode the run-length-encoded tables

        decodeRLE ();

        // Copy scanning tables into the ScannerTable superclass

        _categoryCount = gen_categoryCount;
        _charSetSize = gen_charSetSize;
        _categoryTable = gen_categoryTable;
        _tokenCount = gen_tokenCount;
        _tokenParam = gen_tokenParam;
        _contextCount = gen_contextCount;
        _contextNumber = gen_contextNumber;
        _conditionCount = gen_conditionCount;
        _fwdStateCount = gen_fwdStateCount;
        _fwdRecognitionCount = gen_fwdRecognitionCount;
        _fwdInitialState = gen_fwdInitialState;
        _fwdTransitionTable = gen_fwdTransitionTable;
        _fwdRecognitionTable = gen_fwdRecognitionTable;
        _fwdTokenListLength = gen_fwdTokenListLength;
        _fwdTokenList = gen_fwdTokenList;
        _fwdContextSplit = gen_fwdContextSplit;
        _revStateCount = gen_revStateCount;
        _revRecognitionCount = gen_revRecognitionCount;
        _revTransitionTable = gen_revTransitionTable;
        _revRecognitionTable = gen_revRecognitionTable;
        _revContextSplit = gen_revContextSplit;

        // Copy dynamic-link tables into the ScannerTable superclass

        _conditionNames = gen_conditionNames;
        _tokenNames = gen_tokenNames;
        _tokenLink = gen_tokenLink;

        return;
    }


}

